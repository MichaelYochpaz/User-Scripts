#!/bin/bash

#  ------------------- blackdetect -------------------
#  A script for generating an FFmpeg blackdetect log
#  for an mkv file or all mkv files within a directory.
#
#  Requirements:
#    - FFmpeg
#
#  Usage:
#    blackdetect <File / Directory>
#
#  Arguments:
#    1. File / Directory - A media file or a directory
#        with media files in it to run blackdetect on.
#  ---------------------------------------------------


##############################
#  Create a log file with ffmpeg's blackdetect output of a file or all files in a directory.
#
# Arguments:
#   #1 - Path to an mkv file
#
# Outputs:
#   Print blackdetect output to stdout
##############################
function blackdetect
{
    echo -e "$(basename "$1")"
    echo "--------------------------------------------------"
    
    ffprobe_output="$(ffprobe -hide_banner -f lavfi -i "movie='$1', \
    blackdetect=d=0.1:pix_th=0.00" -select_streams v:1 -show_entries tags=lavfi.black_start,lavfi.black_end -of default=nw=1 2>&1 | grep '\[blackdetect @')"
    
    while read line; do
        start_time_str=$(cut -f4 -d' ' <<< "$line")
        end_time_str=$(cut -f5 -d' ' <<< "$line")
        length_str=$(cut -f6 -d' ' <<< "$line")

        start_time=$(date -d@${start_time_str#black_start:} -u +%H:%M:%S)
        end_time=$(date -d@${end_time_str#black_end:} -u +%H:%M:%S)
        length=$(date -d@${length_str#black_duration:} -u +%H:%M:%S)

        echo -e "Start: $start_time\nEnd: $end_time\nLength: $length\n"
    done <<< "$ffprobe_output"
}

function pring_usage
{
    echo "Usage: $(basename "$0") <File / Directory>"
}


logfile="$(basename "$(realpath "$1")")_blackdetect.txt"

# Assure a valid amount of command-line arguments was passed
if [[ $# -lt 1 ]]; then
    echo "Error: Missing a parameter." >&2
    pring_usage
    exit 1
fi

# Assure file / directory exists
if [[ ! -e "$1" ]]; then
    echo "Error: Directory / file \"$1\" not found." >&2
    pring_usage
    exit 1
fi

# Path parameter ($1) is a directory
if [[ -d "$1" ]]; then
    # Clear log file if it already exists
    truncate -s 0 "$logfile"

    for file_path in "$1"/*.mkv; do
        blackdetect "$file_path" >> "$logfile"
        echo -e "\n\n" >> "$logfile"
    done

# Path parameter ($1) is a File
elif [[ -f "$1" ]]; then
    blackdetect "$1" > "$logfile"
fi