#!/bin/bash

#  --------------------- genlinks ---------------------
#  A script for generating symlinks. 
#  The script will duplicate source's directory structure
#  to destination with symlinks instead of files.
#
#  Passing file extensions allow filtering and will create 
#  symlinks only for files with the file extensions that were passed.
#
#  Usage:
#  genlinks <Source File / Directory> <Destination Directory> [<File Extensions>...]
#  ----------------------------------------------------

usage="$(basename "$0") <Source File / Directory> <Destination Directory> [<File Extensions>...]\n
Examples: $(basename "$0") \"/downloads/movie.mkv\" \"/media/\"
          $(basename "$0") \"/downloads/\" \"/media/\" mkv mp4"

# Assure a valid amount of command-line arguments was passed
if (($# >= 2)); then
	# Assure source file / directory exists
	if [[ ! -e "$1" ]]; then
		echo -e "Source file / folder "$1" doesn't exist."

	else
		# Convert paths to absolute (in case they're relative)
		source_dir="$(realpath "$1")"
		destination_dir="$(realpath "$2")"

		# Single file
		if [[ -f "$source_dir" ]]; then
			ln --symbolic -- "$source_dir" "$2"

		# Directory
		elif  [[ -d "$source_dir" ]]; then
			# Default value - matches all filenames
			regex=".*"

			# If file extensions were passed
			if [[ $# > 2 ]]; then
				# Generate and replace default iregex expression
				regex="$(echo ".*\(${@:3}\)" | sed 's/ /\\|/g')"
			fi
			
			cd -- "$source_dir"
			# Reconstruct source directory structure in destination directory
			find * -type d -exec mkdir --parents -- "$destination_dir"/"{}" \;
			# Generate symlinks
			find * -type f -iregex "$regex" -exec ln --symbolic -- "$source_dir"/"{}" "$destination_dir"/"{}" \;
			# Remove empty folders
			find -type d -empty -delete
		fi
	fi

else
    echo -e "$usage"
fi